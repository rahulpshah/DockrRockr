---
  - name: Provision an EC2 node
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    vars:
      instance_type: t2.micro
      security_group: test
      image: ami-5ec1673e
      region: us-west-2
      key_name: rahul
      ssh_known_hosts_command: "ssh-keyscan -T 10"
      ssh_known_hosts_file: "{{ lookup('env','HOME') + '/.ssh/known_hosts' }}"
      ssh_known_hosts: "{{ groups['all'] }}"
    tasks:
      - name: Launch new Instance
        local_action: ec2 instance_tags="Name=AnsibleTest" group={{ security_group }} instance_type={{ instance_type}} image={{ image }} wait=true region={{ region }} key_name={{ key_name }}
        register: ec2

      - name: Add new instance to host group
        add_host: hostname={{ item.public_ip }} groupname=launched ansible_ssh_user=ec2-user ansible_ssh_private_key_file=/Users/Rahul/Downloads/rahul.pem
        with_items: '{{ec2.instances}}'
      - name: Wait for SSH to come up
        wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
        with_items: '{{ec2.instances}}'

      - name: For each host scan for its ssh public key
        shell: "ssh-keyscan {{ item }},`dig +short {{ item }}`"
        with_items: "{{ ssh_known_hosts }}"
        register: ssh_known_host_results
        ignore_errors: yes
      - name: Add/update the public key
        known_hosts:
          name: "{{ item.item }}"
          key: "{{ item.stdout }}"
          path: "{{  ssh_known_hosts_file }}"
        with_items: "{{ ssh_known_host_results.results }}"


  - name: Configure Instance
  hosts: launched
  remote_user: ec2-user
  tasks:
  - name: curl to get public ip
    shell: "curl ident.me"
    register: host
  - name: set hostname as environment variable
    shell: export HOST="{{ host.stdout }}"
  - name: Add host to bashrc
    lineinfile: dest=~/.bashrc line='export HOST={{ host.stdout }}' insertafter='EOF' state=present
  - name: set slack_token as environment variable
    shell: export SLACK_TOKEN="{{ SLACK_TOKEN }}"
  - name: Add slack_token to bashrc
    lineinfile: dest=~/.bashrc line='export SLACK_TOKEN={{ SLACK_TOKEN }}' insertafter='EOF' state=present
  - name: set port as environment variable
    shell: export PORT="{{ PORT }}"
  - name: Add port to bashrc
    lineinfile: dest=~/.bashrc line='export PORT={{ PORT }}' insertafter='EOF' state=present
  - name: "Download Repo"
    yum: name=http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm state=present
    become: true
  - name: Download the dependencies
    yum: name={{item}} state=present
    with_items:
     - npm
     - git
    become: true
  - name: Install redis
    script: install_redis.sh
  - name: Download the project from git
    git: repo=http://www.github.ncsu.edu/jsharda/DockrRockr.git dest=~/DockrRockr
  - name: Install forever
    npm: name=forever global=yes state=present
    become: true
  - name: Install project dependencies
    npm: path=~/DockrRockr/
  - name: Start Redis
    command: /usr/bin/redis-server
    ignore_errors: yes
    async: 45
    poll: 0
  - name: start DockrRockr
    command: forever start index.js chdir=~/DockrRockr 
    async: 45
    poll: 0